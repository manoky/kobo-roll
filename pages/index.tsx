import type { NextPage, GetServerSideProps } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import Banner from "components/banner";
import NavBar from "components/navbar";
import SectionList from "components/section-list";
import { getMovies } from "lib/videoService";
import { MoviesProps } from "types/videoTypes";
import { fetchWatchedVideos } from "lib/hasuraService";
import { verifyToken } from "lib/jwtService";

interface HomeProps {
  adventureVideos: MoviesProps[];
  animationVideos: MoviesProps[];
  documentaryVideos: MoviesProps[];
  actionVideos: MoviesProps[];
  watchAgain: MoviesProps[];
}
const Home: NextPage<HomeProps> = ({
  adventureVideos,
  animationVideos,
  documentaryVideos,
  actionVideos,
  watchAgain,
}) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Kobo-roll</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* <h1 className={styles.title}>Kobo-roll</h1> */}
        <NavBar />
        <Banner
          id={568124}
          title="Encanto"
          subTitle="The tale of an extraordinary family"
          imgUrl="https://image.tmdb.org/t/p/original/3G1Q5xF40HkUBJXxt2DQgQzKTp5.jpg"
        />

        <SectionList title="Adventure" videos={adventureVideos} size="large" />
        {watchAgain.length > 0 && (
          <SectionList title="Watch Again" videos={watchAgain} size="small" />
        )}
        <SectionList title="Animation" videos={animationVideos} size="small" />
        <SectionList title="Documentary" videos={documentaryVideos} size="medium" />
        <SectionList title="Action" videos={actionVideos} size="small" />
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req }) => {
  const { token } = req.cookies;
  const auth = verifyToken(token);

  const { stats } = await fetchWatchedVideos(auth?.userId || "", token);

  const [adventureVideos, animationVideos, documentaryVideos, actionVideos] =
    await Promise.all([
      getMovies("12"),
      getMovies("16"),
      getMovies("99"),
      getMovies("28"),
    ]);

  return {
    props: {
      adventureVideos,
      animationVideos,
      documentaryVideos,
      actionVideos,
      watchAgain: stats,
    },
  };
};

export default Home;
